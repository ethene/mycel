# Mycel Rebranding Project - Product Requirements Document

## Project Overview

Transform the Briar messaging application to Mycel by Quantum Research Pty Ltd through a systematic, test-driven approach. This rebranding maintains all functionality while updating branding, package names, and visual identity.

## Technical Requirements

### Phase 1: String Resources Update
**Objective**: Change all user-facing text from "Briar" to "Mycel"

**Deliverables**:
- Update main string resource file (briar-android/src/main/res/values/strings.xml)
- Update all 45+ localized string files in values-* directories
- Change app_name from "Briar" to "Mycel"
- Update any user-visible strings containing "Briar"

**Success Criteria**:
- All tests pass (./gradlew test)
- APK builds successfully
- UI displays "Mycel" throughout application
- No user-visible "Briar" references remain

### Phase 2: Application ID Update
**Objective**: Change Android application package ID

**Deliverables**:
- Update applicationId in briar-android/build.gradle to "com.quantumresearch.mycel"
- Reset version name to "1.0.0" and version code to 1
- Update any references to old package ID

**Success Criteria**:
- APK installs as separate application from Briar
- Package name verification passes
- All build processes complete successfully

### Phase 3: Infrastructure Package Renaming
**Objective**: Rename all Bramble layer packages

**Deliverables**:
- Rename org.briarproject.bramble.* to com.quantumresearch.mycel.infrastructure.*
- Update all import statements across codebase
- Update package declarations in all affected files
- Update build configurations and manifests

**Success Criteria**:
- All modules compile without package resolution errors
- Tests pass with new package structure
- No references to old bramble package names

### Phase 4: Application Package Renaming  
**Objective**: Rename all Briar layer packages

**Deliverables**:
- Rename org.briarproject.briar.* to com.quantumresearch.mycel.app.*
- Update all import statements and package declarations
- Update Android manifest package references
- Update service and component registrations

**Success Criteria**:
- Complete application compiles and runs
- All features functional with new package structure
- No org.briarproject references in application layer

### Phase 5: Configuration and Deep Links
**Objective**: Update configuration files and URL schemes

**Deliverables**:
- Change deep link scheme from "briar://" to "mycel://"
- Update intent filters in Android manifest
- Update any hardcoded URLs or schemes
- Update theme and style names

**Success Criteria**:
- Deep links work with mycel:// scheme
- All configuration properly references Mycel
- External app integration works correctly

### Phase 6: Visual Assets Replacement
**Objective**: Replace all Briar visual elements with Mycel branding

**Deliverables**:
- Replace app launcher icons (ic_launcher*.png)
- Update splash screen graphics
- Replace in-app logos and branding images
- Update color schemes and themes
- Replace any Briar-branded graphics

**Success Criteria**:
- App displays Mycel branding throughout
- All icon sizes and densities updated
- Visual consistency across all screens
- No Briar visual elements remain

### Phase 7: Documentation and Metadata
**Objective**: Complete rebranding with documentation updates

**Deliverables**:
- Update README.md with Mycel information
- Update all documentation files
- Update build script comments and metadata
- Update any external reference documentation

**Success Criteria**:
- All documentation reflects Mycel branding
- Build metadata properly configured
- External references updated
- Project ready for public release

## Quality Assurance

### Testing Requirements (Each Phase)
- Unit tests must pass: `./gradlew test`
- Integration tests must pass
- APK must build: `./gradlew :briar-android:assembleDebug`
- Manual smoke testing of core features
- No regressions from previous functionality

### Git Commit Requirements
- Each phase must be committed separately
- Commit message format: `[PHASE-X] Description`
- Include testing verification in commit message
- Reference specific files and changes

### Documentation Requirements
- Update REBRANDING-PROGRESS.md after each phase
- Document any issues encountered
- Update CLAUDE.md if procedures change
- Maintain change log for tracking

## Success Metrics

### Technical Metrics
- 100% test pass rate maintained throughout
- Zero critical functionality regressions
- Clean build pipeline with no warnings
- All package references properly updated

### Branding Metrics
- Zero user-visible "Briar" references
- Complete visual rebrand implementation
- Proper Quantum Research attribution
- Consistent Mycel naming throughout

### Process Metrics
- Each phase completed and tested before proceeding
- Proper git versioning maintained
- Documentation updated after each phase
- Timeline adherence for each milestone

## Risk Mitigation

### Technical Risks
- Large-scale package renaming may break imports
- Build system configuration changes may fail
- Database migrations may be required
- Third-party integrations may need updates

### Mitigation Strategies
- Incremental approach with testing after each phase
- Comprehensive backup before starting each phase
- Rollback procedures documented for each phase
- Test automation to catch regressions early

## Timeline

- **Phase 1**: 1-2 days (String resources)
- **Phase 2**: 1 day (Application ID)
- **Phase 3**: 2-3 days (Infrastructure packages)
- **Phase 4**: 2-3 days (Application packages)
- **Phase 5**: 1 day (Configuration)
- **Phase 6**: 2-3 days (Visual assets)
- **Phase 7**: 1 day (Documentation)

**Total Estimated Duration**: 10-17 days

## Deliverables Summary

1. Fully rebranded Mycel application
2. Updated package structure (com.quantumresearch.mycel.*)
3. Complete visual identity transformation
4. Updated documentation and metadata
5. Maintained functionality and feature parity
6. Clean git history with phase-by-phase commits
7. GPL-3.0 license compliance maintained