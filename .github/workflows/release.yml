name: Release Build & Deploy

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

# Grant GITHUB_TOKEN the permissions required for releases and pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

env:
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: '34'
  ANDROID_BUILD_TOOLS: '34.0.0'

jobs:
  # ============================================================================
  # Create GitHub Release & Build Artifacts
  # ============================================================================
  
  create-release:
    name: 🚀 Create GitHub Release
    runs-on: ubuntu-latest
    
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🏷️ Get Version from Tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Version: ${VERSION}"
    
    - name: 📝 Generate Release Notes
      id: release_notes
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        
        # Create release notes
        cat > release_notes.md << EOF
        # Mycel v${VERSION}
        
        ## What's New
        
        This release includes bug fixes, security updates, and performance improvements for the Mycel secure messaging application.
        
        ## Downloads
        
        - **Android APK**: \`mycel-android-v${VERSION}.apk\` - Install on Android devices (API 21+)
        - **Headless Server**: \`mycel-headless-v${VERSION}.jar\` - Run REST API server
        
        ## Installation
        
        ### Android
        1. Download the APK file
        2. Enable "Install from unknown sources" in Android settings
        3. Install the APK file
        
        ### Headless Server
        1. Download the JAR file
        2. Run with: \`java -jar mycel-headless-v${VERSION}.jar\`
        3. Access REST API at http://localhost:7000
        
        ## Security
        
        All releases are built from source code and cryptographically signed. Verify the checksums below:
        
        ## System Requirements
        
        - **Android**: Android 5.0+ (API level 21+)
        - **Desktop**: Java 17+ required
        - **RAM**: 512MB minimum, 1GB recommended
        - **Storage**: 100MB free space
        
        ## Support
        
        For technical support and bug reports, please visit our GitHub repository.
        
        ---
        
        **⚠️ Security Notice**: This is a peer-to-peer messaging application. No central servers are used. All communication is end-to-end encrypted.
        EOF
        
        echo "Generated release notes for v${VERSION}"
    
    - name: 🚀 Create GitHub Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        
        # Create the release using gh CLI
        gh release create "v${VERSION}" \
          --title "Mycel v${VERSION}" \
          --notes-file release_notes.md \
          --repo ${{ github.repository }}
        
        # Get the release upload URL for artifacts
        UPLOAD_URL=$(gh api repos/${{ github.repository }}/releases/tags/v${VERSION} --jq '.upload_url')
        echo "upload_url=${UPLOAD_URL}" >> $GITHUB_OUTPUT
        echo "id=$(gh api repos/${{ github.repository }}/releases/tags/v${VERSION} --jq '.id')" >> $GITHUB_OUTPUT

  # ============================================================================
  # Build Release Artifacts
  # ============================================================================
  
  build-release:
    name: 🏗️ Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: ☕ Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle
    
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API_LEVEL }}
        build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
    
    - name: 🔧 Accept Android SDK Licenses
      run: yes | sdkmanager --licenses >/dev/null || true
    
    - name: 🏗️ Build Android Release APK
      run: |
        echo "Building Android Release APK..."
        ./gradlew :mycel-android:assembleRelease \
          --build-cache \
          --parallel \
          -Pandroid.useAndroidX=true \
          -Pandroid.enableJetifier=true
        
        # List generated APK files
        find mycel-android/build/outputs/apk -name "*.apk" -type f
    
    - name: 🏗️ Build Headless JAR
      run: |
        echo "Building Headless JAR..."
        ./gradlew :mycel-headless:fatJar \
          --build-cache \
          --parallel
        
        # List generated JAR files  
        find mycel-headless/build/libs -name "*.jar" -type f
    
    - name: 📝 Generate Checksums
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        
        # Create checksums directory
        mkdir -p checksums
        
        # Generate checksums for APK
        if [ -f "mycel-android/build/outputs/apk/official/release/mycel-android-official-release-unsigned.apk" ]; then
          cd mycel-android/build/outputs/apk/official/release/
          sha256sum mycel-android-official-release-unsigned.apk > ../../../../../checksums/mycel-android-v${VERSION}.apk.sha256
          cd ../../../../../
        fi
        
        # Generate checksums for JAR
        if [ -f "mycel-headless/build/libs/mycel-headless-fat.jar" ]; then
          cd mycel-headless/build/libs/
          sha256sum mycel-headless-fat.jar > ../../checksums/mycel-headless-v${VERSION}.jar.sha256
          cd ../../
        fi
        
        # Display checksums
        echo "Generated checksums:"
        find checksums -name "*.sha256" -exec cat {} \;
    
    - name: 📱 Upload Release Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        
        # Upload Android APK
        if [ -f "mycel-android/build/outputs/apk/official/release/mycel-android-official-release-unsigned.apk" ]; then
          cp mycel-android/build/outputs/apk/official/release/mycel-android-official-release-unsigned.apk mycel-android-v${VERSION}.apk
          gh release upload v${VERSION} mycel-android-v${VERSION}.apk --repo ${{ github.repository }}
        fi
        
        # Upload Headless JAR
        if [ -f "mycel-headless/build/libs/mycel-headless-fat.jar" ]; then
          cp mycel-headless/build/libs/mycel-headless-fat.jar mycel-headless-v${VERSION}.jar
          gh release upload v${VERSION} mycel-headless-v${VERSION}.jar --repo ${{ github.repository }}
        fi
        
        # Upload checksums
        if [ -f "checksums/mycel-android-v${VERSION}.apk.sha256" ]; then
          gh release upload v${VERSION} checksums/mycel-android-v${VERSION}.apk.sha256 --repo ${{ github.repository }}
        fi
        
        if [ -f "checksums/mycel-headless-v${VERSION}.jar.sha256" ]; then
          gh release upload v${VERSION} checksums/mycel-headless-v${VERSION}.jar.sha256 --repo ${{ github.repository }}
        fi

  # ============================================================================
  # Deploy to GitHub Pages
  # ============================================================================
  
  deploy-pages:
    name: 📄 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [create-release, build-release]
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write
      contents: read
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🏗️ Generate GitHub Pages Site
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        
        # Create pages directory
        mkdir -p pages
        
        # Create index.html
        cat > pages/index.html << EOF
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Mycel - Secure Peer-to-Peer Messaging</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 20px;
                    background: #f5f5f5;
                }
                .header {
                    text-align: center;
                    background: white;
                    padding: 40px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    margin-bottom: 30px;
                }
                .header h1 {
                    color: #2c3e50;
                    margin-bottom: 10px;
                }
                .header p {
                    color: #7f8c8d;
                    font-size: 1.2em;
                }
                .download-section {
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    margin-bottom: 30px;
                }
                .download-button {
                    display: inline-block;
                    background: #3498db;
                    color: white;
                    padding: 15px 30px;
                    text-decoration: none;
                    border-radius: 5px;
                    margin: 10px;
                    font-weight: bold;
                    transition: background 0.3s;
                }
                .download-button:hover {
                    background: #2980b9;
                }
                .download-button.android {
                    background: #27ae60;
                }
                .download-button.android:hover {
                    background: #219a52;
                }
                .features {
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    margin-bottom: 30px;
                }
                .features ul {
                    list-style: none;
                    padding: 0;
                }
                .features li {
                    padding: 10px 0;
                    border-bottom: 1px solid #ecf0f1;
                }
                .features li:before {
                    content: "✓ ";
                    color: #27ae60;
                    font-weight: bold;
                }
                .version-info {
                    background: white;
                    padding: 20px;
                    border-radius: 10px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    text-align: center;
                    color: #7f8c8d;
                }
                .security-notice {
                    background: #f39c12;
                    color: white;
                    padding: 20px;
                    border-radius: 10px;
                    margin-bottom: 30px;
                    text-align: center;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>🔐 Mycel</h1>
                <p>Secure Peer-to-Peer Messaging</p>
                <p>No servers. No surveillance. Complete privacy.</p>
            </div>
            
            <div class="security-notice">
                <strong>⚠️ Security Notice:</strong> Mycel uses end-to-end encryption and requires no central servers. Your privacy is guaranteed.
            </div>
            
            <div class="download-section">
                <h2>📱 Download Latest Version (v${VERSION})</h2>
                <p>Choose your platform:</p>
                
                <a href="https://github.com/quantumresearch/mycel/releases/download/v${VERSION}/mycel-android-v${VERSION}.apk" 
                   class="download-button android">
                    📱 Download Android APK
                </a>
                
                <a href="https://github.com/quantumresearch/mycel/releases/download/v${VERSION}/mycel-headless-v${VERSION}.jar" 
                   class="download-button">
                    🖥️ Download Server JAR
                </a>
                
                <p><small>
                    <a href="https://github.com/quantumresearch/mycel/releases/download/v${VERSION}/mycel-android-v${VERSION}.apk.sha256">Android SHA256</a> |
                    <a href="https://github.com/quantumresearch/mycel/releases/download/v${VERSION}/mycel-headless-v${VERSION}.jar.sha256">Server SHA256</a>
                </small></p>
            </div>
            
            <div class="features">
                <h2>🔒 Key Features</h2>
                <ul>
                    <li>End-to-end encryption for all messages</li>
                    <li>No central servers - true peer-to-peer communication</li>
                    <li>Multiple transport protocols (Tor, Bluetooth, WiFi)</li>
                    <li>Private messaging and group conversations</li>
                    <li>Public forums and blog posts</li>
                    <li>File sharing with attachments</li>
                    <li>Offline message queuing</li>
                    <li>Cross-platform compatibility</li>
                    <li>Anonymous communication via Tor</li>
                    <li>Open source and auditable</li>
                </ul>
            </div>
            
            <div class="download-section">
                <h2>📋 Installation Instructions</h2>
                
                <h3>📱 Android</h3>
                <ol>
                    <li>Download the APK file above</li>
                    <li>Enable "Install from unknown sources" in Android settings</li>
                    <li>Install the APK file</li>
                    <li>Grant necessary permissions for networking</li>
                </ol>
                
                <h3>🖥️ Server/Desktop</h3>
                <ol>
                    <li>Ensure Java 17+ is installed</li>
                    <li>Download the JAR file above</li>
                    <li>Run: <code>java -jar mycel-headless-v${VERSION}.jar</code></li>
                    <li>Access REST API at http://localhost:7000</li>
                </ol>
            </div>
            
            <div class="download-section">
                <h2>🔧 System Requirements</h2>
                <ul>
                    <li><strong>Android:</strong> Android 5.0+ (API level 21+)</li>
                    <li><strong>Desktop:</strong> Java 17+ required</li>
                    <li><strong>RAM:</strong> 512MB minimum, 1GB recommended</li>
                    <li><strong>Storage:</strong> 100MB free space</li>
                    <li><strong>Network:</strong> Internet connection for Tor, or local network for direct connections</li>
                </ul>
            </div>
            
            <div class="version-info">
                <p>Version ${VERSION} | Built from source | <a href="https://github.com/quantumresearch/mycel">GitHub Repository</a></p>
                <p>© 2024 Quantum Research Pty Ltd | Based on Briar Project</p>
            </div>
        </body>
        </html>
        EOF
        
        echo "Generated GitHub Pages site for Mycel v${VERSION}"
    
    - name: ⚙️ Setup Pages
      uses: actions/configure-pages@v4
    
    - name: 📤 Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages/
    
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # ============================================================================
  # Post-Release Notifications
  # ============================================================================
  
  notify-release:
    name: 📢 Release Notification
    runs-on: ubuntu-latest
    needs: [create-release, build-release, deploy-pages]
    if: always()
    
    steps:
    - name: 🎉 Success Notification
      if: needs.build-release.result == 'success' && needs.deploy-pages.result == 'success'
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        echo "🎉 Mycel v${VERSION} released successfully!"
        echo "📱 Android APK: Available for download"
        echo "🖥️ Headless JAR: Available for download" 
        echo "📄 GitHub Pages: Updated with latest version"
        echo "🚀 Release URL: https://github.com/quantumresearch/mycel/releases/tag/v${VERSION}"
    
    - name: ❌ Failure Notification
      if: needs.build-release.result == 'failure' || needs.deploy-pages.result == 'failure'
      run: |
        VERSION=${{ needs.create-release.outputs.version }}
        echo "❌ Mycel v${VERSION} release failed"
        echo "🔍 Check the logs for details"
        echo "🛠️ Please investigate and retry the release"